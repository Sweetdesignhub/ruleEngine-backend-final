generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rule {
  id             Int          @id @default(autoincrement())
  name           String
  description    String
  data           Json
  flowInput      Json?
  secret         String
  status         String       @default("ACTIVE")
  ruleType       String
  activationDate DateTime     @default(now())
  category       String
  OrganizationId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organization   Organization @relation("OrganizationRules", fields: [OrganizationId], references: [id])
  versions       Version[]    @relation("RuleVersions")
}

model Version {
  id          Int      @id @default(autoincrement())
  ruleId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  data        Json
  flowInput   Json?
  versionName String   @default("1.0")
  rule        Rule     @relation("RuleVersions", fields: [ruleId], references: [id])
}

model Teams {
  id             Int          @id @default(autoincrement())
  name           String
  description    String
  organizationId Int
  ownerId        Int
  deletedAt      DateTime?
  isDeleted      Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organization   Organization @relation(fields: [organizationId], references: [id])
  owner          User         @relation("OwnedTeams", fields: [ownerId], references: [id])
  users          User[]       @relation("TeamUsers")
}

model Organization {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  ownerId     Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  isDeleted   Boolean   @default(false)
  owner       User      @relation("OwnerOrganizations", fields: [ownerId], references: [id])
  rules       Rule[]    @relation("OrganizationRules")
  teams       Teams[]
  users       User[]    @relation("UserOrganizations")
}

model User {
  id                 Int            @id @default(autoincrement())
  name               String
  email              String         @unique
  password           String
  role               Role           @default(USER)
  emailVerified      Boolean        @default(false)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  termsAccepted      Boolean        @default(false)
  ownedOrganizations Organization[] @relation("OwnerOrganizations")
  ownedTeams         Teams[]        @relation("OwnedTeams")
  teamMemberships    Teams[]        @relation("TeamUsers")
  organizations      Organization[] @relation("UserOrganizations")
}

enum Role {
  USER
  ADMIN
}
