// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Rule {
  id             Int          @id @default(autoincrement())
  name           String
  description    String
  data           Json
  flowInput      Json?
  secret         String
  status         String       @default("ACTIVE")
  ruleType       String
  activationDate DateTime     @default(now())
  category       String
  versions       String       @default("1.0")
  OrganizationId Int
  organization   Organization @relation("OrganizationRules", fields: [OrganizationId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Organization {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  ownerId     Int
  owner       User     @relation("OwnerOrganizations", fields: [ownerId], references: [id])
  members     User[]   @relation("UserOrganizations")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rules       Rule[]   @relation("OrganizationRules") // This should match the name used in Rule model
}

model User {
  id                 Int            @id @default(autoincrement())
  name               String
  email              String         @unique
  password           String
  role               Role           @default(USER)
  emailVerified      Boolean        @default(false)
  termsAccepted      Boolean        @default(false) // Added this field
  organizations      Organization[] @relation("UserOrganizations") // Many-to-many relationship with Organization
  ownedOrganizations Organization[] @relation("OwnerOrganizations") // Organizations owned by this user
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
}
